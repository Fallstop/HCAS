{"version":3,"sources":["../../resources/js/app.js"],"names":["clearHash","history","pushState","document","title","window","location","pathname","search","$types","getElementById","$pages","$loader","$guestName","$memberName","$guestSubmit","$memberSubmit","$membersList","elements","selector","callback","i","v","querySelectorAll","length","nonNull","element","undefined","triggerClick","event","createEvent","initEvent","dispatchEvent","isEnterKey","code","removeChildren","firstChild","removeChild","showLoader","classList","remove","hideLoader","add","toastHandle","toastEventListener","showToast","text","undoCallback","error","duration","toast","toastText","toastUndo","removeEventListener","addEventListener","textContent","clearTimeout","setTimeout","request","method","url","headers","XMLHttpRequest","open","headerKeys","Object","keys","key","value","setRequestHeader","onload","status","data","JSON","parse","response","onerror","encodeForm","output","encodeURIComponent","substr","get","send","post","del","onhashchange","hash","pages","page","includes","resetPage","toPage","id","resetTimeout","disabled","currentPage","querySelector","focus","e","checked","selectedMember","blur","setCacheBadge","cached","$cacheIndicator","onclick","members","loadMembers","fail","reason","err","res","hasOwnProperty","getRelevantMembers","query","toLowerCase","matching","rankings","member","memberLower","ranking","startsWith","indexOf","push","sort","a","b","fillMembersList","tabIndex","$item","createElement","$radio","type","name","onkeydown","childNodes","item","parent","parentNode","contains","appendChild","TIMEOUT_DELAY","timeoutHandle","clearScreen","saveAttendance","onkeyup","relevantMembers","removeAttendance","getAttribute","confirm","parentElement","listItem"],"mappings":"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","sourcesContent":["// Clears the window hash\r\nconst clearHash = () => history.pushState(\"\", document.title, window.location.pathname + window.location.search);\r\n\r\nconst $types = document.getElementById('types');\r\nconst $pages = document.getElementById('pages');\r\nconst $loader = document.getElementById('loader');\r\n\r\nconst $guestName = document.getElementById('guestName');\r\nconst $memberName = document.getElementById('memberName');\r\n\r\nconst $guestSubmit = document.getElementById('guestSubmit');\r\nconst $memberSubmit = document.getElementById('memberSubmit');\r\n\r\nconst $membersList = document.getElementById('membersList');\r\n\r\n/*\r\n*   Start Utilities\r\n*\r\n*   This section of code contains utility functions such\r\n*   as loader controls, element manipulation, and networking\r\n*\r\n*/\r\n\r\n/**\r\n *  Elements - Collects all elements matching the selector\r\n *  and runs the callback function with the element as the\r\n *  value\r\n *\r\n *  @param selector The css selector to get the elements for\r\n *  @param callback The callback function to run for each element\r\n */\r\nfunction elements(selector, callback) {\r\n    // Query the selector for all its elements then loop through them\r\n    for (let i = 0, v = document.querySelectorAll(selector); i < v.length; i++) {\r\n        callback(v[i]); // Run the callback with the element\r\n    }\r\n}\r\n\r\n/**\r\n *  NonNull - Checks to make sure the provided element is not null\r\n *  then runs the callback if true\r\n *\r\n *  @param element The element to check if null\r\n *  @param callback The callback function to run if not null\r\n */\r\nfunction nonNull(element, callback) {\r\n    // Ensure not undefined and not null\r\n    if (element !== undefined && element !== null) callback(element); // Run callback with element\r\n}\r\n\r\n/**\r\n *  TriggerClick - Triggers a click event on the provided element\r\n *\r\n *  @param element The element to click\r\n */\r\nfunction triggerClick(element) {\r\n    const event = document.createEvent('MouseEvents'); // Create a new mouse event\r\n    event.initEvent('click', true, true); // Initialize a click event\r\n    element.dispatchEvent(event); // Dispatch the event\r\n}\r\n\r\n/**\r\n *  IsEnterKey - A Utility function which takes in a keyboard event\r\n *  and returns whether or not the pressed key was the Enter key\r\n *\r\n *  @param event The keyboard event\r\n *  @return boolean Whether or not enter was pressed\r\n */\r\nfunction isEnterKey(event) {\r\n    let code;\r\n    if (event[\"key\"] !== undefined) {\r\n        code = event[\"key\"];\r\n    } else if (event[\"keyIdentifier\"] !== undefined) {\r\n        code = event[\"keyIdentifier\"];\r\n    } else if (event[\"keyCode\"] !== undefined) {\r\n        code = event[\"keyCode\"];\r\n    }\r\n    return code === 'Enter' || code === 'Return' || code === 13;\r\n}\r\n\r\n/**\r\n *  RemoveChildren - Removes all the child elements of the\r\n *  provided element\r\n *\r\n *  @param element The element to remove the children of\r\n */\r\nfunction removeChildren(element) {\r\n    while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n    }\r\n}\r\n\r\n/* == Loader manipulation == */\r\n\r\n/**\r\n *  ShowLoader - Removes the hidden class from the loader element\r\n *  making it visible\r\n */\r\nfunction showLoader() {\r\n    $loader.classList.remove('loading-bar--hidden'); // Remove the class\r\n}\r\n\r\n/**\r\n *  HideLoader - Adds the hidden class to the loader element\r\n *  making it hidden\r\n */\r\nfunction hideLoader() {\r\n    $loader.classList.add('loading-bar--hidden'); // Add the class\r\n}\r\n\r\n/* == Toast manipulation == */\r\n\r\nlet toastHandle = -1; // The current toast timeout handle (For resetting the timeout)\r\nlet toastEventListener = null; // The current toast event listener (For handling Undo button clicks)\r\n\r\n/**\r\n *  ShowToast - Displays the toast popup at the top of the window for\r\n *  the desired duration with the provided message\r\n *\r\n * @param text The message to display in the toast\r\n * @param undoCallback The function to run when \"Undo\" is pressed or null for no undo button\r\n * @param error Whether or not this is a error toast which should be displayed in red\r\n * @param duration The duration to display this toast for\r\n */\r\nfunction showToast(text, undoCallback = null, error = false, duration = 2500) {\r\n    const toast = document.getElementById('toast'); // The toast element\r\n    const toastText = document.getElementById('toastText');\r\n    const toastUndo = document.getElementById('toastUndo');\r\n    if (error) { // If the toast is an error toast\r\n        toast.classList.add('toast--error'); // Add the error class\r\n    } else { // Otherwise\r\n        toast.classList.remove('toast--error'); // Remove the error class if its there\r\n    }\r\n    if (toastEventListener != null) { // If there is already a click listener\r\n        // Clear the current click listener this prevents the bug\r\n        // that causes all changes to be reverted when undo is pressed\r\n        toastUndo.removeEventListener('click', toastEventListener);\r\n    }\r\n    // Create the toast event listener by running the undo callback\r\n    // if its not null\r\n    toastEventListener = () => undoCallback != null && undoCallback();\r\n    // Add the callback to the undo button\r\n    toastUndo.addEventListener('click', toastEventListener);\r\n    if (undoCallback == null) { // If there is not a undo callback\r\n        toastUndo.classList.add('toast__undo--hidden'); // Hide the \"Undo\" button\r\n    } else { // Otherwise\r\n        toastUndo.classList.remove('toast__undo--hidden'); // Show the \"Undo\" button\r\n    }\r\n    // Set the toast text content to the provided text\r\n    toastText.textContent = text;\r\n    // Remove the hidden class from the toast\r\n    toast.classList.remove('toast--hidden');\r\n    if (toastHandle !== -1) { // If a toast handle is already active\r\n        clearTimeout(toastHandle); // Clear the timeout handle\r\n    }\r\n    // Assign the handle to a new timeout\r\n    toastHandle = setTimeout(() => { // Once the timeout is complete\r\n        toast.classList.add('toast--hidden'); // Hide the toast\r\n        if (toastEventListener != null) { // Remove the event listener if one is attached\r\n            toastUndo.removeEventListener('click', toastEventListener);\r\n        }\r\n    }, duration);\r\n}\r\n\r\n/* == Networking == */\r\n\r\n/**\r\n *  Request - Creates a XMLHttpRequest object with the provided method, url,\r\n *  headers and executes the callback function when loaded or on error\r\n *\r\n *  @param method The HTTP request method\r\n *  @param url The HTTP request url\r\n *  @param headers The HTTP request headers\r\n *  @param callback The callback to run once the request is complete\r\n */\r\nfunction request(method, url, headers, callback) {\r\n    const request = new XMLHttpRequest(); // Create a new XMLHttpRequest\r\n    request.open(method, url, true); // Open the request\r\n    const headerKeys = Object.keys(headers); // Get all the header keys\r\n    for (let i = 0; i < headerKeys.length; i++) { // Loop the header keys\r\n        const key = headerKeys[i]; // Get the header key\r\n        const value = headers[key]; // Get the header value using its key\r\n        request.setRequestHeader(key, value); // Set the request header to the Key: Value\r\n    }\r\n    request.onload = function () { // When the request is loaded\r\n        // When the status is between 200 and 400\r\n        if (this.status >= 200 && this.status <= 400) {\r\n            const data = JSON.parse(this.response); // Parse the JSON response\r\n            callback(null, data); // Run the callback with the response data\r\n        } else {\r\n            // Run the callback with an error message\r\n            callback('Connected to server but unable to process request.', null);\r\n        }\r\n    }\r\n    request.onerror = function () { // When a connection problem occurs\r\n        // Run the callback with an error message\r\n        callback('Unable to connect to server', null)\r\n    }\r\n    // Return the request object so that we can send it\r\n    return request;\r\n}\r\n\r\n/**\r\n *  EncodeForm - Converts a object into a application/x-www-form-urlencoded\r\n *  form by joining all the data together\r\n *\r\n *  @param data The object to convert to form data\r\n *  @return string The form data (e.g username=user&password=pass)\r\n */\r\nfunction encodeForm(data) {\r\n    let output = ''; // Create the empty output\r\n    const keys = Object.keys(data); // Get all of the object keys\r\n    for (let i = 0; i < keys.length; i++) { // Loop through the keys\r\n        const key = keys[i]; // Get the current key\r\n        const value = data[key]; // Get the current value with the key\r\n        // Append the encoded data to output\r\n        output += encodeURIComponent(key) + '=' + encodeURIComponent(value) + '&';\r\n    }\r\n    // Return the output with the last & trimmed off\r\n    return output.substr(0, output.length - 1);\r\n}\r\n\r\n/**\r\n *  Get - Sends a GET request to the provided url and runs\r\n *  the callback when done\r\n *\r\n *  @param url The HTTP request url\r\n *  @param callback The callback to run once the request is complete\r\n */\r\nfunction get(url, callback) {\r\n    request('GET', url, {\r\n        'Accept': 'application/json; charset=UTF-8', // We only need to accept JSON\r\n    }, callback).send() // Create and send the request\r\n}\r\n\r\n\r\n/**\r\n *  Post - Sends a POST request to the provided url with the\r\n *  provided form data and runs the callback when done\r\n *\r\n *  @param url The HTTP request url\r\n *  @param data The HTTP request form data\r\n *  @param callback The callback to run once the request is complete\r\n */\r\nfunction post(url, data, callback) {\r\n    request('POST', url, {\r\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n        'Accept': 'application/json; charset=UTF-8',\r\n    }, callback).send(encodeForm(data)); // Create the request and send the encoded form\r\n}\r\n\r\n/**\r\n *  Del/Delete - Sends a DELETE request to the provided url with the\r\n *  provided form data and runs the callback when done\r\n *\r\n *  @param url The HTTP request url\r\n *  @param data The HTTP request form data\r\n *  @param callback The callback to run once the request is complete\r\n */\r\nfunction del(url, data, callback) {\r\n    request('DELETE', url, {\r\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n        'Accept': 'application/json; charset=UTF-8',\r\n    }, callback).send(encodeForm(data)); // Create the request and send the encoded form\r\n}\r\n\r\n\r\n/*\r\n*\r\n*   End Utilities\r\n*\r\n*   ########################\r\n\r\n*   Start Page Manipulation\r\n*\r\n*   This section of code controls the changing of the page\r\n*   contents when the window hash changes\r\n*   (#member, $guest)\r\n*\r\n*/\r\n\r\n// When the window hash code changes\r\nwindow.onhashchange = () => {\r\n    const hash = window.location.hash // The current window hash (e.g #guest)\r\n    const pages = [\"guest\", \"member\"]; // A list of the valid pages\r\n    if (hash.length < 1) {  // The hash was removed so we can ignore it\r\n        /*\r\n        * If the hash was removed we don't want to make changes\r\n        * Because it was most likely changes via resetPage()\r\n        */\r\n        return;\r\n    }\r\n    const page = hash.substr(1); // We remove the # from the hash to get the page name\r\n    if (!pages.includes(page)) {  // Make sure the hash value is listed in the pages\r\n        return resetPage(); // If not reset the page (this corrects the hash)\r\n    }\r\n    toPage(page); // Open the selected page\r\n}\r\n\r\n/**\r\n *  ToPage - Shows the selected page\r\n *\r\n *  @param id The id of the page to show\r\n */\r\nfunction toPage(id) {\r\n    resetTimeout(); // Clear the current timeout (we dont want to reset the page right after opening it)\r\n    // Disable all type buttons so we cant accidentally tab select them\r\n    elements('.member-types__type', element => element.disabled = true);\r\n    $types.classList.add('member-types--hidden'); // Hide the types page so it goes out of view\r\n    $pages.classList.remove('sign-pages--hidden'); // Show the sign-in page so that its visible\r\n    // Get the current page via its id\r\n    const currentPage = document.querySelector('.sign-pages__page[page-id=\"' + id + '\"]');\r\n    // Remove the hidden class for the current page so its visible\r\n    nonNull(currentPage, element => element.classList.remove('sign-pages__page--hidden'));\r\n    if (id === 'member') { // If we are selecting the member page\r\n        $memberName.focus(); // Focus the member input\r\n    } else { // Otherwise\r\n        $guestName.focus(); // Focus the guest input\r\n    }\r\n}\r\n\r\n/**\r\n *  ResetPage - Resets the page to its default state,\r\n *  clears all the inputs, clears the page hash, takes\r\n *  inputs out of focus and shows main menu\r\n */\r\nfunction resetPage() {\r\n    resetTimeout(); // Reset the page timeout\r\n    // Enables all the type buttons again so they can be pushed\r\n    elements('.member-types__type', element => element.disabled = false);\r\n    $types.classList.remove('member-types--hidden'); // Show the tpyes page so it comes into view\r\n    $pages.classList.add('sign-pages--hidden'); // Hide the sign-in page so it goes out of view\r\n    elements('.sign-pages__page', element => element.classList.add('sign-pages__page--hidden')); // Hide all sign-in pages\r\n    clearHash(); // Clear the window hash so that the next user will always get the home page\r\n    $guestName.value = ''; // Clear the guest name input\r\n    $memberName.value = '';  // Clear the member name input\r\n    elements('.members__list__item', e => e.checked = false); // Uncheck all the members radio buttons\r\n    selectedMember = null; // Set the selected member to done\r\n    $guestSubmit.disabled = true; // Disable the guest submit button\r\n    $memberSubmit.disabled = true; // Disable the member submit button\r\n    removeChildren($membersList); // Remove all the members list children\r\n    $memberName.blur(); // Take the member name input out of focus\r\n    $guestName.blur(); // Take the guest name input out of focus\r\n}\r\n\r\n/**\r\n *  SetCacheBadge - Changes the visibility of the \"Cached\" badge in the\r\n *  top corner of the screen indicating if the response is cached or not\r\n *\r\n *  @param cached Whether or not the list is cached\r\n */\r\nfunction setCacheBadge(cached) {\r\n    const $cacheIndicator = document.getElementById('cacheIndicator');\r\n    if (cached) {\r\n        $cacheIndicator.classList.remove('cache-indicator--hidden');\r\n    } else {\r\n        $cacheIndicator.classList.add('cache-indicator--hidden');\r\n    }\r\n}\r\n\r\n// Add the functionality for the back button\r\nnonNull(document.getElementById('signBack'), element => element.onclick = () => resetPage());\r\n\r\n/*\r\n*   End Page Manipulation\r\n*\r\n*   ########################\r\n*\r\n*   Start Member Handling\r\n*\r\n*   This section of code controls retrieving the members list from\r\n*   the backend, filtering, and sorting that data to display it\r\n*\r\n*/\r\n\r\n// This stores the list of members retrieved from the server\r\nlet members = [];\r\nlet selectedMember = null; // Stores the selected member\r\n\r\n/**\r\n *  LoadMembers - Loads the list of members from the backend server\r\n *  and displays a loader while its happening then updates the cache\r\n *  badge when done\r\n */\r\nfunction loadMembers() {\r\n    // Display the loader so the user knows whats happening\r\n    showLoader();\r\n    // A Function that is called if we failed\r\n    const fail = (reason) => showToast('Failed to load members: ' + reason, null, true);\r\n    // Ajax request to /members the backend endpoint for the members list\r\n    get('/members', (err, res) => {\r\n        if (err != null) {\r\n            fail(err); // Warn the user\r\n        } else {\r\n            if (!res.hasOwnProperty('status')) { // If the request is missing a status\r\n                fail('Malformed Server Response status missing'); // Warn the user\r\n            } else { // Otherwise\r\n                if (res.status === 'success'\r\n                    && res.hasOwnProperty(\"members\")\r\n                    && res.hasOwnProperty(\"cached\")\r\n                ) { // Make sure the request has all the required data\r\n                    members = res.members;\r\n                    setCacheBadge(res.cached); // Set the cache badge\r\n                } else {\r\n                    fail('Malformed Server Response'); // Warn the user\r\n                }\r\n            }\r\n        }\r\n        // Always hide the loader\r\n        hideLoader();\r\n    })\r\n}\r\n\r\n/**\r\n *  GetRelevantMembers - Filters the members list based on the provided query\r\n *  and sorts the list based on how much of a match it is\r\n *\r\n *  Names are ranked using a score from 0 - 8\r\n *  the score is determined by how much matching\r\n *  parts the name has with the member\r\n *\r\n *  Full Match: 4\r\n *  Start Match +2\r\n *  Contains Match +1\r\n *\r\n *   All of these can stack up except for the full match\r\n *\r\n *  @param query The name search query\r\n *  @return array The filtered list of members\r\n */\r\nfunction getRelevantMembers(query) {\r\n    // If the query is null we ignore everyone\r\n    if (query == null) {\r\n        return []; // Return an empty array\r\n    }\r\n    query = query.toLowerCase(); // The lowercase query\r\n    const matching = []; // The matching results\r\n    const rankings = {}; // The rankings for each result\r\n    for (let i = 0; i < members.length; i++) { // Loop through all the members\r\n        const member = members[i]; // Get the member\r\n        const memberLower = member.toLowerCase(); // Get a lowercase copy of the name for ignore case matching\r\n        let ranking = 0; // The current member ranking\r\n        if (query === memberLower) { // If we a complete match\r\n            ranking = 4; // Set the highest available ranking\r\n        } else {\r\n            // If the name starts with the query set the second highest ranking\r\n            if (memberLower.startsWith(query)) ranking += 2;\r\n            // If the name contains the query increase the ranking\r\n            if (memberLower.indexOf(query) >= 0) ranking += 1;\r\n        }\r\n        // Set the ranking of the member to its ranking\r\n        rankings[member] = ranking;\r\n        if (ranking > 0) { // If the ranking is greater than 0\r\n            matching.push(member); // Add it to the matching list\r\n        }\r\n    }\r\n    // Sort the names with their ranking (inverted sorting so higher ranks appear first)\r\n    matching.sort((a, b) => rankings[b] - rankings[a]);\r\n    // Return the matching names\r\n    return matching;\r\n}\r\n\r\n\r\n/**\r\n *  FillMembersList - Fills the members list with the members radio buttons\r\n *  and clears the current contents\r\n *\r\n *  @param query The name search query\r\n */\r\nfunction fillMembersList(query = null) {\r\n    if (query == null || query.length === 0) query = null; // If the query is empty we just make it null\r\n    const members = getRelevantMembers(query); // Get the members relevant to the search\r\n    removeChildren($membersList); // Remove all the members list children\r\n    let tabIndex = 5; // The current page tab index\r\n    for (let i = 0; i < members.length; i++) { // Loop through all the members\r\n        const member = members[i]; // Get the current member\r\n        // Create the label wrapping so the whole thing acts a radio button\r\n        const $item = document.createElement('label');\r\n        $item.classList.add('members__list__item'); // Add the list item class\r\n        $item.textContent = member; // Set the element text content\r\n        /*\r\n        * Fixed window tabbing in commit\r\n        * e3641cf4874c884437c95e8be6457e8e84e69fa5\r\n        * using tabIndex\r\n        */\r\n        $item.tabIndex = tabIndex; // Set the element tab index\r\n        tabIndex++; // Increase the tab index\r\n\r\n        // Create the radio button\r\n        const $radio = document.createElement('input');\r\n        $radio.type = 'radio'; // Set the input type to radio button\r\n        $radio.name = 'members'; // Set the radio name to \"members\" so its grouped with the others\r\n        $radio.classList.add('members__list__item__button'); // Add the button class\r\n        $radio.value = member; // Set the value to the member name\r\n\r\n        $item.onkeydown = e => { // When a key is pressed while the item is focused\r\n            if (isEnterKey(e)) { // If the enter key is pressed\r\n                const $radio = $item.childNodes.item(0); // Get the first child (this is the radio button)\r\n                triggerClick($radio); // Click the radio button to select it\r\n                $memberSubmit.disabled = selectedMember == null; // Set the submit button disabled state\r\n                triggerClick($memberSubmit); // Click the submit button\r\n            }\r\n        }\r\n\r\n        $radio.onclick = () => { // When the radio button is clicked\r\n            const parent = $radio.parentNode;  // Get the parent element\r\n            if ($radio.checked) { // If the button is checked\r\n                if (parent.classList.contains('members__list__item--selected')) { // If its already selected\r\n                    triggerClick($memberSubmit); // Double click triggers save so submit\r\n                } else {\r\n                    // Remove the selected class from the other elements\r\n                    elements('.members__list__item', e => e.classList.remove('members__list__item--selected'));\r\n                    parent.classList.add('members__list__item--selected'); // Add the selected class\r\n                    selectedMember = $radio.value; // Set the selected member to the value of the radio button\r\n                }\r\n            }\r\n            // Set the done button to disabled if the selected member is null otherwise enable it\r\n            $memberSubmit.disabled = selectedMember == null;\r\n        }\r\n\r\n        // Append the radio button to the item\r\n        $item.appendChild($radio);\r\n        // Append the item to the members list\r\n        $membersList.appendChild($item);\r\n    }\r\n}\r\n\r\n/*\r\n*   Clear the page hash on reload to ensure\r\n*   The user is always give the main page\r\n*/\r\nclearHash();\r\n\r\n\r\n/*\r\n*   End Member Handling\r\n*\r\n*   ########################\r\n*\r\n*   Start Timeout Handling\r\n*\r\n*   This section of code handles the automatic timeout of the\r\n*   window which resets the page every 60 seconds so that\r\n*   if someone presses a button then leaves it will return\r\n*   to the main menu\r\n*\r\n*/\r\n\r\nconst TIMEOUT_DELAY = 60 * 1000; // The delay to timeout after in milliseconds (60 seconds)\r\nlet timeoutHandle = -1; // The handle for the current timeout\r\n\r\n/**\r\n *  ClearScreen - Clears the screen when the page timeout has finished\r\n *  and loads the members list again\r\n */\r\nfunction clearScreen() {\r\n    resetPage(); // Reset the page\r\n    loadMembers(); // Load the members list\r\n}\r\n\r\n/**\r\n *  ResetTimeout - Resets the currently running window\r\n *  timeout\r\n */\r\nfunction resetTimeout() {\r\n    clearTimeout(timeoutHandle); // Clear the current timeout using the handle\r\n    timeoutHandle = setTimeout(clearScreen, TIMEOUT_DELAY); // Set a new timeout to the handle\r\n}\r\n\r\n// When we are not on the attendance page\r\nif (document.location.pathname !== '/attending') {\r\n    loadMembers(); // Load the members list\r\n    resetTimeout(); // Set the window timeout\r\n}\r\n\r\n/*\r\n*   End Timeout Handling\r\n*\r\n*   ########################\r\n*\r\n*   Start Attendance Marking\r\n*\r\n*   This section of code controls the marking of attendance\r\n*   via the backend along with its respective frontend\r\n*\r\n*/\r\n\r\n// Make sure the member submit button is not null\r\nnonNull($memberSubmit, element => {\r\n    // When the button is clicked\r\n    element.onclick = () => {\r\n        if (selectedMember != null) { //  if the selected member is not null\r\n            saveAttendance(selectedMember, true)// Save the attendance\r\n        }\r\n    };\r\n});\r\n\r\n// Make sure the member name input is not null\r\nnonNull($memberName, element => {\r\n    // When a key is released for the GuestName input\r\n    element.onkeyup = event => {\r\n        if (isEnterKey(event)) {// Enter key pushed\r\n            let name = element.value; // Get the current name\r\n            if (name == null || name.length === 0) name = null; // If the name is empty we just make it null\r\n            const relevantMembers = getRelevantMembers(name);\r\n            if (relevantMembers.length > 0) { // Make sure we have members\r\n                selectedMember = relevantMembers[0]; // Selected the first member\r\n                $memberSubmit.disabled = selectedMember == null; // Set the disabled state of the submit button\r\n                triggerClick($memberSubmit); // Click the submit button\r\n            }\r\n        }\r\n        resetTimeout(); // Make sure we don't timeout mid typing\r\n        fillMembersList(element.value); // Fill the members list filtered to the new query\r\n    }\r\n});\r\n\r\n// Make sure the guest name input is not null\r\nnonNull($guestName, element => {\r\n    // When a key is pressed on the guest name input\r\n    element.onkeyup = event => {\r\n        if (isEnterKey(event)) { // If the pressed key was enter\r\n            triggerClick($guestSubmit); // Click the guest submit button\r\n        }\r\n        resetTimeout(); // Make sure we don't timeout when typing\r\n        $guestSubmit.disabled = element.value.length < 1; // Set the submit button to disable if there is no name\r\n    }\r\n});\r\n\r\n// Make sure the guest submit button is not null\r\nnonNull($guestSubmit, element => {\r\n    // When the guest submit button is clicked\r\n    element.onclick = () => {\r\n        const name = $guestName.value; // Get the guest name\r\n        if (name != null && name.length > 0) {\r\n            // Save the attendance\r\n            saveAttendance(name, false);\r\n        }\r\n    }\r\n})\r\n\r\n/**\r\n *  SaveAttendance - Sends a post request to the backend saving the\r\n *  attendance for the provided name and setting guest based on the\r\n *  provided member\r\n *\r\n *  @param name The name to mark attendance for\r\n *  @param member Whether or not the attendance is of a member\r\n */\r\nfunction saveAttendance(name, member) {\r\n    showLoader(); // Show the loader\r\n    // A Function that is called if we failed\r\n    const fail = (reason) => showToast('Failed to mark attendance: ' + reason, null, true);\r\n    post('/attendance', {name: name, member: member}, (err, res) => {\r\n        if (err != null) {\r\n            fail(err); // Fail because we couldn't connect\r\n        } else {\r\n            // Make sure the request isn't malformed\r\n            if (!res.hasOwnProperty('status')) {\r\n                fail('Malformed server data'); // Failed because missing status\r\n            } else {\r\n                if (res.status === 'success') {\r\n                    // Show a toast telling the user its been marked\r\n                    showToast('Successfully marked attendance for \"' + name + '\"', () => { // The callback that occurs if undo is pressed\r\n                        // Remove the attendance\r\n                        removeAttendance(name, () => { // After the attendance is removed\r\n                            showToast('Reverted attendance for \"' + name + '\"'); // Show a toast telling the user its been reverted\r\n                        });\r\n                    });\r\n                    // Take the user back to the main page\r\n                    resetPage();\r\n                } else {\r\n                    if (res.hasOwnProperty(\"reason\")) {\r\n                        // Show a error toast\r\n                        showToast(res.reason, null, true);\r\n                    } else fail('Unknown Reason'); // Fail with an unknown reason\r\n                }\r\n            }\r\n        }\r\n        hideLoader(); // Always hide the loader\r\n    });\r\n}\r\n\r\nfunction removeAttendance(name, callback) {\r\n    showLoader(); // Show the loader\r\n    // A Function that is called if we failed\r\n    const fail = (reason) => showToast('Failed to change attendance: ' + reason, null, true);\r\n    del('/attendance', {name: name}, (err, res) => {\r\n        if (err != null) {\r\n            fail(err); // Fail because we couldn't connect\r\n        } else {\r\n            // Make sure the request isn't malformed\r\n            if (!res.hasOwnProperty('status')) {\r\n                fail('Malformed server data'); // Failed because missing status\r\n            } else {\r\n                if (res.status === 'success') {\r\n                    // Show a toast letting the user know the attendance was marked\r\n                    showToast('Successfully removed attendance for \"' + name + '\"', null);\r\n                    // Run the callback\r\n                    callback();\r\n                } else fail('Unknown Reason'); // Fail with an unknown reason\r\n            }\r\n        }\r\n        hideLoader(); // Always hide the loader\r\n    });\r\n}\r\n\r\n\r\n/*\r\n*   End Attendance Marking\r\n*\r\n*   ########################\r\n*\r\n*   Start Attendance List\r\n*\r\n*   This section of code controls the attendance list\r\n*   code such as the delete buttons\r\n*\r\n*/\r\n\r\n// For all of the delete buttons on the attendance page\r\nelements('.attendance__list__item__buttons__button', element => element.onclick = () => { // When the element is clicked\r\n    const name = element.getAttribute('data-name'); // Get the name attribute\r\n    if (name !== undefined && name !== null) { // If there is a name attribute\r\n        if (confirm('Are you sure you want to remove the attendance for \"' + name + '\"')) { // Confirm the user wants to remove it\r\n            removeAttendance(name, () => { // Remove the attendance\r\n                const parent = element.parentElement.parentElement; // Get the root element\r\n                const listItem = parent.parentElement; // Get its parent\r\n                listItem.removeChild(parent); // Remove the element using its parent\r\n            });\r\n        }\r\n    }\r\n});"],"file":"app.js"}